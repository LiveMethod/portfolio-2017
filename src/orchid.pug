extends ./_layout.pug

append nav
  block link
    -var selected = 'orchid';

block body
  .container-fluid
    .row.panel.panel--orchid-space
      img.col-xs-22.col-xs-offset-1.col-md-16.col-md-offset-4(src="/img/orchid/Orchid_Browser_Demo_02.png?w=1200")

    .row
      .default-text
        h1.text-center Personal Finance Tools

        h2 The Premise:
        p No piece of personal finance software gave me the tools I wanted, so I rolled my own.

        p It scrapes my debit card data from Simple's API, drops it into MongoDB, and gives me a custom interface that lets me interact with my spending in a way that fits my mental model, and more importantly, my actual financial goals.

        p It’s designed to do 
          strong a small number of really opinionated things:

        ol
          li Rank every card swipe based on my subjective opinion of how necessary a purchase was.

          li Answer the question “how much of my spending is frivolous?” by tracking real spending against ideal spending, showing me how close I got to spending only on what matters.

          li Display purchases in a few exploratory formats meant to help spending patterns stand out better than they would in a list.

        //- p If you’d like, the code is available on github.

        hr

        h2 Tracking Spending Efficiency

        p One of the most vaulable parts of this software is also the most simple.

        p In a perfect world, how much could I save every month? How close to that amount did I actually get?

        p The pie chart is a useful visual, but I wanted to have both the graph and the text, because I’m as interested in the exact dollar figures as I am the at-a-glance savings percentages.

     

    .panel.panel--orchid-space
      .row
        img.shadow.col-xs-22.col-xs-offset-1.col-sm-18.col-sm-offset-3.col-lg-14.col-lg-offset-5(src="/img/orchid/Orchid_PieChart_Annotated_02.jpg?w=1000")

      .row(style="margin-top: 80px")
        .col-xs-18.col-xs-offset-3.col-md-5.col-md-offset-4
          img.col-xs-2.col-sm-1.col-md-3.col-lg-2(src="/img/orchid/Orchid_Bullet_1.png")

          .clearfix.visible-md.visible-lg

          .col-xs-20.col-xs-offset-1.col-sm-20.col-sm-offset-2.col-md-24.col-md-offset-0
            h4(style="color: white;") Actual Savings
          
            p(style="color: #ABD6EA;") What percentage of income was actually saved?
        .col-xs-18.col-xs-offset-3.col-md-5.col-md-offset-1
          img.col-xs-2.col-sm-1.col-md-3.col-lg-2(src="/img/orchid/Orchid_Bullet_2.png")

          .clearfix.visible-md.visible-lg

          .col-xs-20.col-xs-offset-1.col-sm-20.col-sm-offset-2.col-md-24.col-md-offset-0
            h4(style="color: white;") Possible Savings
          
            p(style="color: #ABD6EA;") What percentage of income could have been saved?

        .col-xs-18.col-xs-offset-3.col-md-5.col-md-offset-1
          img.col-xs-2.col-sm-1.col-md-3.col-lg-2(src="/img/orchid/Orchid_Bullet_3.png")

          .clearfix.visible-md.visible-lg

          .col-xs-20.col-xs-offset-1.col-sm-20.col-sm-offset-2.col-md-24.col-md-offset-0
            h4(style="color: white;") Savings Efficiency
          
            p(style="color: #ABD6EA;") The percentage of possible savings that were actually saved.



    //- ////////////////////////////////////////////////////////////////////////////////////////
    //- ////////////////////////////////////////////////////////////////////////////////////////
    //- ////////////////////////////////////////////////////////////////////////////////////////

    .row
      .default-text

        h2 Transaction Feed &amp; Necessity Ranking

        p Problem no.1 is getting my input on necessity tied to the bank’s transaction data in a way that doesn’t feel like excel grunt work.

        p My first thought was a tinder-style mobile app with a single prompt and a dead simple response interface, but because this is exclusively a desktop tool, I opted for a feed that showed the minimum info necessary to make a decision, and the minimum interface for inputting a decision.The first pass of the ranking interface tried to mirror the chart it created as much as possible:

    .row.panel.panel--orchid-pink
      img.col-xs-18.col-xs-offset-3.col-sm-12.col-sm-offset-6.col-md-8.col-md-offset-8(src="/img/orchid/Orchid_Slice_Rectangles_02.png?w=700&fm=jpg")

    .row
      .default-text
        p I prototyped this, and the hit areas don’t feel very good. There isn’t much height to work with, and it feels too easy to stray sideways and hit the wrong box.

        p To add some space and simplify things, I scaled back from a 1-10 ranking system to a 1-5:

    .row.panel.panel--orchid-pink
      img.col-xs-18.col-xs-offset-3.col-sm-12.col-sm-offset-6.col-md-8.col-md-offset-8(src="/img/orchid/Orchid_Slice_BigDots_02.png?w=700&fm=jpg")

    .row
      .default-text

        p This felt really primitive and ugly looking. Back to the 1-10 scale.

    .row.panel.panel--orchid-pink
      img.col-xs-18.col-xs-offset-3.col-sm-12.col-sm-offset-6.col-md-8.col-md-offset-8(src="/img/orchid/Orchid_Slice_SmallDots_02.png?w=700&fm=jpg")

    .row
      .default-text

        p Okay, this is getting somewhere. Instead of showing the rating all the time in the form of opacity, it fills the meter on hover. It feels good to use, and looks better than the large circles, in my opinion. Even though the height is as narrow as the first version, having the extra space between each option makes it feel less error-prone.

        p The only change I wanted was more indication of positivity and negativity. It didn’t have enough of the “this one’s good, this one’s bad” feeling that I wanted, so I experimented with two ways of coloring the dots on hover.

    .row.panel.panel--orchid-pink
      img.col-xs-9.col-xs-offset-2.col-md-8.col-md-offset-3(src="/img/orchid/Orchid_Slice_ColorOptions_03.png?w=700&fm=jpg")
      img.col-xs-9.col-xs-offset-2.col-md-8.col-md-offset-2(src="/img/orchid/Orchid_Slice_ColorOptions_04.png?w=700&fm=jpg")

    .row
      .default-text

        p The first colors the entire bar based on the ranking color, the second only reveals the underlying colors.

        p In the prototype, I found the first option really distracting - parts of the interface that shouldn’t draw attention (the dots you’ve already passed over) keep flashing to new loud colors and pulling my eye away from the dot that’s actually being hovered over. #2 wins because it changes where you’re looking without pulling your eye back to somewhere it’s already been.

        h3 Animation

        p There are a lot of these transaction entries to be ranked, so fast input is the name of the game. When a transaction is ranked, it needs to get out of the way as fast as possible. 

        p On the other hand, it shouldn’t just snap out of the way without giving any success feedback.

        p I tweaked the height, Y,  and opacity params until I got one that felt snappy without being too brief.

        p Additionally, the title bar has an counter-style animation when the number changes.

    .row.panel.panel--orchid-pink
      .col-xs-18.col-xs-offset-3.col-sm-12.col-sm-offset-6.col-md-8.col-md-offset-8
        img.gfyitem(data-id="VillainousFemaleGoose", data-controls="false", data-dot="false")

    //- .row
    //-   .default-text

    //-     h3 Keyboard Input

    //-     p After building the above version, it occured to me that a keyboard input using the number keys would be a faster ranking system than clicking. You just need a way to turn it on and highlight the selected transaction.

    //-     p Here’s what I came up with:

    //-     //- 

    //-     p Clicking the keyboard button turns on numpad entry mode, which highlights the first entry in the list for ranking. Pressing any key 1 - (1)0 will rank the transaction and move on to the next. There’s currently no skip functionality, but I’ll eventally bind the arrow keys to that.

    //- ////////////////////////////////////////////////////////////////////////////////////////
    //- ////////////////////////////////////////////////////////////////////////////////////////
    //- ////////////////////////////////////////////////////////////////////////////////////////

    .row
      .default-text
        h2 Data Viz Playground

        p This project is the perfect sandbox to try out different data visualization types. 

        p Here are two that I’ve implemented so far.

        h3 1. Stacked Bar

        p The graph that kicked off this entire project.

        p It uses the monthly take-home amount as a range for the X asis, then plots transactions chronologically, sized by their dollar amount and colored by their level of necessity.

        p An edge case that isn’t covered yet: when monthly spending exceeds monthly income. Thankfully this is a rare occurrence.

    .row.panel.panel--orchid-dark-space
        img.col-xs-24.col-xs-offset-0.col-md-18.col-md-offset-3.col-lg-16.col-lg-offset-4(src="/img/orchid/Orchid_StackedBar_02.png?w=1200")

    .row
      .default-text

        h3 2. Spending By Day

        p Plots the total amount spent each day. Weekends are highlighted.

        p The Y axis is on a linear scale, but I’d like to make it a little smarter in the future, because my outsized San Francisco rent payment wreaks havoc on this thing.

        p Note: this graph uses the date from the auth, but the dollar amount from the settle, to keep amounts accurate but avoid having transactions land on the days they were finialized, rather than swiped.

    .panel.panel--orchid-dark-space
      .row
        img.shadow.col-xs-22.col-xs-offset-1.col-sm-18.col-sm-offset-3.col-lg-14.col-lg-offset-5(src="/img/orchid/Orchid_BarChart_01.jpg?w=1200")